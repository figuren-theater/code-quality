name: Build, test & measure

on:
  workflow_call:

jobs:
  pre-run:
    name: 'Pre run'
    runs-on: ubuntu-latest
    outputs:
      changed-php: ${{ steps.filter.outputs.php }}
      changed-js: ${{ steps.filter.outputs.js }}
    steps:
      
      # Checks to see if any files in the PR match one of the listed file types.
      # We can use this filter to decide whether or not to run linters or tests.
      # You can check if a file with a listed file type is in the PR by doing:
      # if: ${{ steps.filter.outputs.md == 'true' }}
      # This will return true if there's a markdown file that was changed
      # in the PR.
      - uses: dorny/paths-filter@v2.2.1
        id: filter
        with:
          filters: |
            md:
              - '**/*.md'
            js:
              - '**/*.js'
            json:
              - '**/*.json'
            yml:
              - '**/*.yml'
            scss:
              - '**/*.scss'
            php:
              - '**/*.php'

  #-----------------------------------------------------------------------------------------------------------------------

  static-analysis-php:
    name: 'Static Analysis: PHP'
    runs-on: ubuntu-latest
    needs: pre-run
    if: ${{ needs.pre-run.outputs.changed-php == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          # phpstan requires PHP 7.1+.
          php-version: '8.0'
          extensions: dom, iconv, json, libxml, zip

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Configure Composer cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install

      - name: Static Analysis (PHPStan)
        run: |
          vendor/bin/phpstan --version
          vendor/bin/phpstan
